#!/usr/bin/groovy
@Library('test-shared-library') _

// Job parameters
properties(
        [
                buildDiscarder(logRotator(numToKeepStr: '10'))
        ]
)

cancelPreviousBuilds()

def pipeline
def sparkVersions
def testH2OBranch
node("docker") {
    cleanWs()
    checkout scm
    def commons = load 'ci/commons.groovy'
    pipeline = load 'ci/sparklingWaterPipeline.groovy'
    sparkVersions = commons.getSupportedSparkVersions()
    testH2OBranch = commons.loadGradleProperties("gradle.properties")["testH2OBranch"]
}


pipeline(params) { p ->
    sparkMajorVersions = sparkVersions
    runUnitTests = "true"
    runPyUnitTests = "true"
    runRUnitTests = "true"
    runIntegTests = "true"
    runPyIntegTests = "true"
    buildAgainstH2OBranch = "false"
    h2oBranch = testH2OBranch
    uploadNightly = "false"
    uploadNightlyDockerImages = "false"
    backendMode = "both"
}
