apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply from: "$rootDir/gradle/shadowRuntime.gradle"
apply plugin: 'com.github.jk1.dependency-license-report'

import com.github.jk1.license.filter.*

description = "Sparkling Water Assembly"

dependencies {
    // Sparkling Water libraries
    compile project(":sparkling-water-ml")
    compile project(":sparkling-water-repl")
    compile(project(":sparkling-water-core"))
    compile(project(":sparkling-water-extension-stack-trace"))
    compile(project(":sparkling-water-extensions"))

    // Spark libraries
    compile "org.apache.spark:spark-core_${scalaBaseVersion}:${sparkVersion}"
    compile "org.apache.spark:spark-sql_${scalaBaseVersion}:${sparkVersion}"
    compile "org.apache.spark:spark-mllib_${scalaBaseVersion}:${sparkVersion}"
    compile "org.apache.spark:spark-repl_${scalaBaseVersion}:${sparkVersion}"
}

jar {
    enabled = false // we do not need to generate jar file in this case
    archiveBaseName = "${jar.archiveBaseName.get()}_${scalaBaseVersion}"
}

shadowJar {
    configurations = [project.configurations.shadowRuntime]

    mergeServiceFiles()

    relocate 'javassist', 'ai.h2o.javassist'
    relocate 'com.google.common', 'ai.h2o.com.google.common'
    relocate 'org.eclipse.jetty', 'ai.h2o.org.eclipse.jetty'
    relocate 'org.eclipse.jetty.orbit', 'ai.h2o.org.eclipse.jetty.orbit'

    from "$project.buildDir/reports/" include '**/*'
    exclude 'www/flow/packs/test-*/**'

    archiveBaseName = "${archiveBaseName.get()}_${scalaBaseVersion}"
}

licenseReport {
    allowedLicensesFile = new File("$projectDir/allowed-licenses.json")
    filters = new LicenseBundleNormalizer(bundlePath: "$projectDir/license-normalizer-bundle.json")
}

artifacts {
    compile shadowJar
}

shadowJar.dependsOn generateLicenseReport
build.dependsOn checkLicense
build.dependsOn shadowJar

