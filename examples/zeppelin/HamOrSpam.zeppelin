{"paragraphs":[{"text":"%md\n# Ham Or Spam\n\nThe notebook demonstrates usage of Sparkling Water and H2O API from Zeppelin notebooks.\nTo launch Zeppelin with Sparkling Water package it is necessary to:\n\n```bash\nexport SPARK_HOME=...# Spark 2.0 home\nexport SPARK_SUBMIT_OPTIONS=\"--packages ai.h2o:sparkling-water-examples_2.11:2.0.0\"\nbin/zeppelin.sh -Pspark-2.0\n```","dateUpdated":"Jun 2, 2016 3:22:17
PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464899117815_-526903323","id":"20160602-132517_1659370912","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>Ham Or Spam</h1>\n<p>The notebook demonstrates usage of Sparkling Water and H2O API from Zeppelin notebooks.\n<br  />To launch
Zeppelin with Sparkling Water package it is necessary to:</p>\n<pre><code class=\"bash\">export SPARK_HOME=...# Spark 2.0 home\nexport SPARK_SUBMIT_OPTIONS=\"--packages ai.h2o:sparkling-water-examples_2.11:2.0.0\"\nbin/zeppelin.sh -Pspark-2.0\n</code></pre>\n"},"dateCreated":"Jun 2, 2016 1:25:17 PM","dateStarted":"Jun 2, 2016 1:32:58 PM","dateFinished":"Jun 2, 2016 1:32:58 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:669"},{"text":"%md\n## Prepare environment","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464899130668_2059394108","id":"20160602-132530_997989301","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Prepare environment</h2>\n"},"dateCreated":"Jun 2, 2016 1:25:30 PM","dateStarted":"Jun 2, 2016 1:25:55 PM","dateFinished":"Jun 2, 2016 1:25:55 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:670"},{"text":"%spark\nimport org.apache.spark.SparkFiles\nimport org.apache.spark.ml.PipelineModel\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.h2o.H2OPipeline\nimport org.apache.spark.ml.h2o.features.{ColRemover, DatasetSplitter}\nimport org.apache.spark.ml.h2o.models.H2ODeepLearning\nimport org.apache.spark.sql.types.{StringType, StructField, StructType}\nimport org.apache.spark.sql.{DataFrame, Row, SQLContext}\nimport water.support.SparkContextSupport\nimport water.fvec.H2OFrame\n","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464899150808_-1250369173","id":"20160602-132550_724599233","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.SparkFiles\nimport org.apache.spark.ml.PipelineModel\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.h2o.H2OPipeline\nimport org.apache.spark.ml.h2o.features.{ColRemover, DatasetSplitter}\nimport org.apache.spark.ml.h2o.models.H2ODeepLearning\nimport org.apache.spark.sql.types.{StringType, StructField, StructType}\nimport org.apache.spark.sql.{DataFrame, Row, SQLContext}\nimport water.support.SparkContextSupport\nimport water.fvec.H2OFrame\n"},"dateCreated":"Jun 2, 2016 1:25:50 PM","dateStarted":"Jun 2, 2016 2:22:18 PM","dateFinished":"Jun 2, 2016 2:22:45 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:671"},{"text":"%md \n## Specify location of input file","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464899385880_-252609650","id":"20160602-132945_1066262452","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Specify location of input file</h2>\n"},"dateCreated":"Jun 2, 2016 1:29:45 PM","dateStarted":"Jun 2, 2016 2:24:34 PM","dateFinished":"Jun 2, 2016 2:24:34 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:672"},{"text":"val smsDataFileName = \"smsData.txt\"\nval smsDataFilePath = \"examples/smalldata/\" + smsDataFileName\n\n// Register files to SparkContext\nSparkContextSupport.addFiles(sc, smsDataFilePath)","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902623368_900028830","id":"20160602-142343_1145036519","result":{"code":"SUCCESS","type":"TEXT","msg":"smsDataFileName: String = smsData.txt\nsmsDataFilePath: String = examples/smalldata/smsData.txt\n"},"dateCreated":"Jun 2, 2016 2:23:43 PM","dateStarted":"Jun 2, 2016 2:25:42 PM","dateFinished":"Jun 2, 2016 2:25:43 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:673"},{"text":"%md\n## Load and parse data\n","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902677942_445316927","id":"20160602-142437_101155992","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Load and parse data</h2>\n"},"dateCreated":"Jun 2, 2016 2:24:37 PM","dateStarted":"Jun 2, 2016 2:26:14 PM","dateFinished":"Jun 2, 2016 2:26:14 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:674"},{"text":"// This method loads the data, perform some basic filtering and create Spark's dataframe\ndef load(dataFile: String)(implicit sqlContext: SQLContext): DataFrame = {\n  val smsSchema = StructType(Array(\n    StructField(\"label\", StringType, nullable = false),\n    StructField(\"text\", StringType, nullable = false)))\n  val rowRDD = sc.textFile(SparkFiles.get(dataFile)).map(_.split(\"\\t\")).filter(r => !r(0).isEmpty).map(p => Row(p(0),p(1)))\n  sqlContext.createDataFrame(rowRDD, smsSchema)\n}\n","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902774265_-1757215640","id":"20160602-142614_1404685140","result":{"code":"SUCCESS","type":"TEXT","msg":"load: (dataFile: String)(implicit sqlContext: org.apache.spark.sql.SQLContext)org.apache.spark.sql.DataFrame\n"},"dateCreated":"Jun 2, 2016 2:26:14 PM","dateStarted":"Jun 2, 2016 2:26:23 PM","dateFinished":"Jun 2, 2016 2:26:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:675"},{"text":"%md\n## Create H2OContext\nThe `H2OContext` is handle to H2O cloud. It can be created per a Spark job only once and provides API for data transformation between\nH2O and Spark.","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902783007_456260106","id":"20160602-142623_1429708287","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Create H2OContext</h2>\n<p>The <code>H2OContext</code> is handle to H2O cloud. It can be created per a Spark job only once and provides API for data transformation between\n<br  />H2O and Spark.</p>\n"},"dateCreated":"Jun 2, 2016 2:26:23 PM","dateStarted":"Jun 2, 2016 2:28:22 PM","dateFinished":"Jun 2, 2016 2:28:22 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:676"},{"text":"// Start H2O services\nimport org.apache.spark.h2o._\nimplicit val h2oContext = H2OContext.getOrCreate(sc)\n","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902902326_860782798","id":"20160602-142822_339674632","result":{"code":"SUCCESS","type":"TEXT","msg":"import org.apache.spark.h2o._\nh2oContext: org.apache.spark.h2o.H2OContext = \n\nSparkling Water Context:\n * H2O name: sparkling-water-michal_714096489\n * number of executors: 1\n * list of used executors:\n  (executorId, host, port)\n  ------------------------\n  (driver,localhost,54321)\n  ------------------------\n\n  Open H2O Flow in browser: http://127.0.0.1:54321 (CMD + click in Mac OSX)\n    \n"},"dateCreated":"Jun 2, 2016 2:28:22 PM","dateStarted":"Jun 2, 2016 2:28:28 PM","dateFinished":"Jun 2, 2016 2:28:34 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:677"},{"text":"%md\nRight now H2O is running and H2O Flow UI can be opened via typing hc.openFlow or opening URL given above.\nHowever, for now we stay in Zeppelin and define Machine Learning pipeline.\n\n## Machine Learning Pipeline\nThe pipeline compose individual transformation steps:\n  1. tokenization\n  2. word filtering\n  3. word vectorization (TF)\n  4. inverse document frequency computation (IDF)\n  5. splitting data into train  and validation parts\n  6. building H2O DeepLearning model\n  \n### Tokenization and Word Filtering","dateUpdated":"Jun 2, 2016 3:22:17 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902908097_-842131158","id":"20160602-142828_173511385","result":{"code":"SUCCESS","type":"HTML","msg":"<p>Right now H2O is running and H2O Flow UI can be opened via typing hc.openFlow or opening URL given above.\n<br  />However, for now we stay in Zeppelin and define Machine Learning pipeline.</p>\n<h2>Machine Learning Pipeline</h2>\n<p>The pipeline compose individual transformation steps:</p>\n<ol>\n<li>tokenization</li>\n<li>word filtering</li>\n<li>word vectorization (TF)</li>\n<li>inverse document frequency computation (IDF)</li>\n<li>splitting data into test and validation parts</li>\n<li>building H2O DeepLearning model</li>\n</ol>\n<h3>Tokenization and Word Filtering</h3>\n"},"dateCreated":"Jun 2, 2016 2:28:28 PM","dateStarted":"Jun 2, 2016 2:55:23 PM","dateFinished":"Jun 2, 2016 2:55:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:678"},{"text":"// Tokenize the messages\nval tokenizer = new RegexTokenizer().\n  setInputCol(\"text\").\n  setOutputCol(\"words\").\n  setMinTokenLength(3).\n  setGaps(false).\n  setPattern(\"[a-zA-Z]+\")\n\n// Remove ignored words\nval stopWordsRemover = new StopWordsRemover().\n  setInputCol(tokenizer.getOutputCol).\n  setOutputCol(\"filtered\").\n  setStopWords(Array(\"the\", \"a\", \"\", \"in\", \"on\", \"at\", \"as\", \"not\", \"for\")).\n  setCaseSensitive(false)\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464902992360_-248124829","id":"20160602-142952_1770542102","result":{"code":"SUCCESS","type":"TEXT","msg":"tokenizer: org.apache.spark.ml.feature.RegexTokenizer = regexTok_cc4ef6c3f4c2\nstopWordsRemover: org.apache.spark.ml.feature.StopWordsRemover = stopWords_6d7651d61251\n"},"dateCreated":"Jun 2, 2016 2:29:52 PM","dateStarted":"Jun 2, 2016 2:52:51 PM","dateFinished":"Jun 2, 2016 2:52:51 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:679"},{"text":"%md\n### Build TF-IDF transformation","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904371060_1677533025","id":"20160602-145251_2079906876","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Build TF-IDF transformation</h3>\n"},"dateCreated":"Jun 2, 2016 2:52:51 PM","dateStarted":"Jun 2, 2016 2:55:27 PM","dateFinished":"Jun 2, 2016 2:55:27 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:680"},{"text":"// Vectorize the space\nval hashingTF = new HashingTF().\n  setNumFeatures(1 << 10).\n  setInputCol(tokenizer.getOutputCol).\n  setOutputCol(\"wordToIndex\")\n\n// Create inverse document frequencies model\nval idf = new IDF().\n  setMinDocFreq(4).\n  setInputCol(hashingTF.getOutputCol).\n  setOutputCol(\"tf_idf\")\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904513947_-581945668","id":"20160602-145513_1291809838","result":{"code":"SUCCESS","type":"TEXT","msg":"hashingTF: org.apache.spark.ml.feature.HashingTF = hashingTF_4505146ff958\nidf: org.apache.spark.ml.feature.IDF = idf_6042b1a89f35\n"},"dateCreated":"Jun 2, 2016 2:55:13 PM","dateStarted":"Jun 2, 2016 2:56:36 PM","dateFinished":"Jun 2, 2016 2:56:37 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:681"},{"text":"%md\n### Split Data into Train and Validation Parts","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904596647_-469844176","id":"20160602-145636_124250969","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Split Data into Train and Validation Parts</h3>\n"},"dateCreated":"Jun 2, 2016 2:56:36 PM","dateStarted":"Jun 2, 2016 2:58:59 PM","dateFinished":"Jun 2, 2016 2:58:59 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:682"},{"text":"// This is OneTimeTransformer which is executed only during fitting stage\nval colRemover = new ColRemover().\n  setKeep(true).\n  setColumns(Array[String](\"label\", \"tf_idf\"))\n\n// Split the dataset and store the splits with the specified keys into DKV\n// This is OneTimeTransformer which is executed only during fitting stage\n// It determines the frame which is passed on the output in the following order:\n//    1) If the train key is specified using setTrainKey method and the key is also specified in the list of keys, then frame with this key is passed on the output\n//    2) Otherwise, if the default key - \"train.hex\" is specified in the list of keys, then frame with this key is passed on the output\n//    3) Otherwise the first frame specified in the list of keys is passed on the output\nval splitter = new DatasetSplitter()(h2oContext, sqlContext).\n  setKeys(Array[String](\"train.hex\", \"valid.hex\")).\n  setRatios(Array[Double](0.8)).\n  setTrainKey(\"train.hex\")\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904739501_44935052","id":"20160602-145859_1699190423","result":{"code":"SUCCESS","type":"TEXT","msg":"colRemover: org.apache.spark.ml.h2o.features.ColRemover = h2oColRemover_fb56c31d72e8\nsplitter: org.apache.spark.ml.h2o.features.DatasetSplitter = h2oFrameSplitter_e35112fe9650\n"},"dateCreated":"Jun 2, 2016 2:58:59 PM","dateStarted":"Jun 2, 2016 3:01:09 PM","dateFinished":"Jun 2, 2016 3:01:09 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:683"},{"text":"%md\n### Build H2O DeepLearning Model\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904827399_2098293959","id":"20160602-150027_402040669","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Build H2O DeepLearning Model</h3>\n"},"dateCreated":"Jun 2, 2016 3:00:27 PM","dateStarted":"Jun 2, 2016 3:02:49 PM","dateFinished":"Jun 2, 2016 3:02:49 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:684"},{"text":"// If the key specified the training set is specified using setTrainKey, then frame with this key is used as the training\n// frame, otherwise it uses the frame from the previous stage as the training frame\nval dl = new H2ODeepLearning()(h2oContext, sqlContext).\n  setEpochs(10).\n  setL1(0.001).\n  setL2(0.0).\n  setHidden(Array[Int](200, 200)).\n  setValidKey(splitter.getKeys(1)).\n  setResponseColumn(\"label\")\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904969408_-1546616262","id":"20160602-150249_1553688339","result":{"code":"SUCCESS","type":"TEXT","msg":"dl: org.apache.spark.ml.h2o.models.H2ODeepLearning = dl_41508e67b78e\n"},"dateCreated":"Jun 2, 2016 3:02:49 PM","dateStarted":"Jun 2, 2016 3:03:10 PM","dateFinished":"Jun 2, 2016 3:03:10 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:685"},{"text":"%md\n### Define Resulting Pipeline\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464904975607_2130611222","id":"20160602-150255_715212992","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Define Resulting Pipeline</h3>\n"},"dateCreated":"Jun 2, 2016 3:02:55 PM","dateStarted":"Jun 2, 2016 3:03:36 PM","dateFinished":"Jun 2, 2016 3:03:36 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:686"},{"text":"// Create the pipeline by defining all the stages\nval pipeline = new H2OPipeline().\n  setStages(Array(tokenizer, stopWordsRemover, hashingTF, idf, colRemover, splitter, dl))\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905016613_-676855529","id":"20160602-150336_408111215","result":{"code":"SUCCESS","type":"TEXT","msg":"pipeline: org.apache.spark.ml.h2o.H2OPipeline = pipeline_c336df2dcbd4\n"},"dateCreated":"Jun 2, 2016 3:03:36 PM","dateStarted":"Jun 2, 2016 3:03:40 PM","dateFinished":"Jun 2, 2016 3:03:41 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:687"},{"text":"%md\n## Invoke the Pipeline\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905020866_938705102","id":"20160602-150340_1904201901","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Invoke the Pipeline</h2>\n"},"dateCreated":"Jun 2, 2016 3:03:40 PM","dateStarted":"Jun 2, 2016 3:03:56 PM","dateFinished":"Jun 2, 2016 3:03:56 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:688"},{"text":"// Train the pipeline model\nval data = load(\"smsData.txt\")(sqlContext)\nval model = pipeline.fit(data)\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905036627_-916538770","id":"20160602-150356_2097744054","result":{"code":"SUCCESS","type":"TEXT","msg":"data: org.apache.spark.sql.DataFrame = [label: string, text: string]\nmodel: org.apache.spark.ml.PipelineModel = pipeline_c336df2dcbd4\n"},"dateCreated":"Jun 2, 2016 3:03:56 PM","dateStarted":"Jun 2, 2016 3:04:33 PM","dateFinished":"Jun 2, 2016 3:04:48 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:689"},{"text":"%md\n## Define Spam Detector\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905064349_1865442609","id":"20160602-150424_783871034","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Define Spam Detector</h2>\n"},"dateCreated":"Jun 2, 2016 3:04:24 PM","dateStarted":"Jun 2, 2016 3:05:38 PM","dateFinished":"Jun 2, 2016 3:05:38 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:690"},{"text":"def isSpam(smsText: String,\n           model: PipelineModel,\n           h2oContext: H2OContext,\n           hamThreshold: Double = 0.5):Boolean = {\n  import h2oContext.implicits._\n  val smsTextSchema = StructType(Array(StructField(\"text\", StringType, nullable = false)))\n  val smsTextRowRDD = sc.parallelize(Seq(smsText)).map(Row(_))\n  val smsTextDF = sqlContext.createDataFrame(smsTextRowRDD, smsTextSchema)\n  val prediction: H2OFrame = model.transform(smsTextDF)\n  prediction.vecs()(1).at(0) < hamThreshold\n}\n","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905138385_1705325770","id":"20160602-150538_1872842440","result":{"code":"SUCCESS","type":"TEXT","msg":"isSpam: (smsText: String, model: org.apache.spark.ml.PipelineModel, h2oContext: org.apache.spark.h2o.H2OContext, hamThreshold: Double)Boolean\n"},"dateCreated":"Jun 2, 2016 3:05:38 PM","dateStarted":"Jun 2, 2016 3:05:50 PM","dateFinished":"Jun 2, 2016 3:05:51 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:691"},{"text":"%md\n### Is the message \"Michal, h2oworld party tonight in MV?\" spam?","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905150436_-1170672258","id":"20160602-150550_470098842","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Is the message &ldquo;Michal, h2oworld party tonight in MV?&rdquo; spam?</h3>\n"},"dateCreated":"Jun 2, 2016 3:05:50 PM","dateStarted":"Jun 2, 2016 3:06:23 PM","dateFinished":"Jun 2, 2016 3:06:23 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:692"},{"text":"println(isSpam(\"Michal, h2oworld party tonight in MV?\", model, h2oContext))","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905172919_392039857","id":"20160602-150612_430914907","result":{"code":"SUCCESS","type":"TEXT","msg":"false\n"},"dateCreated":"Jun 2, 2016 3:06:12 PM","dateStarted":"Jun 2, 2016 3:06:37 PM","dateFinished":"Jun 2, 2016 3:06:38 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:693"},{"text":"%md\n### Is the message \"We tried to contact you re your reply to our offer of a Video Handset? 750 anytime any networks mins? UNLIMITED TEXT?\" spam?","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905189914_-571356065","id":"20160602-150629_1932761421","result":{"code":"SUCCESS","type":"HTML","msg":"<h3>Is the message &ldquo;We tried to contact you re your reply to our offer of a Video Handset? 750 anytime any networks mins? UNLIMITED TEXT?&rdquo; spam?</h3>\n"},"dateCreated":"Jun 2, 2016 3:06:29 PM","dateStarted":"Jun 2, 2016 3:06:55 PM","dateFinished":"Jun 2, 2016 3:06:56 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:694"},{"text":"println(isSpam(\"We tried to contact you re your reply to our offer of a Video Handset? 750 anytime any networks mins? UNLIMITED TEXT?\", model, h2oContext))","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905215954_-1704795676","id":"20160602-150655_1560764416","result":{"code":"SUCCESS","type":"TEXT","msg":"true\n"},"dateCreated":"Jun 2, 2016 3:06:55 PM","dateStarted":"Jun 2, 2016 3:07:09 PM","dateFinished":"Jun 2, 2016 3:07:10 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:695"},{"text":"h2oContext.openFlow","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905229668_-79585674","id":"20160602-150709_19504597","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"Jun 2, 2016 3:07:09 PM","dateStarted":"Jun 2, 2016 3:07:23 PM","dateFinished":"Jun 2, 2016 3:07:24 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:696"},{"text":"%sh\ncurl --silent http://localhost:54321/3/Frames | jsonpp","dateUpdated":"Jun 2, 2016 3:22:18 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/sh","tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464905243674_-1889292903","id":"20160602-150723_1977638534","result":{"code":"SUCCESS","type":"TEXT","msg":"{\n  \"__meta\": {\n    \"schema_version\": 3,\n    \"schema_name\": \"FramesV3\",\n    \"schema_type\": \"Frames\"\n  },\n  \"_exclude_fields\": \"\",\n  \"row_offset\": 0,\n  \"row_count\": 0,\n  \"column_offset\": 0,\n  \"column_count\": 0,\n  \"job\": null,\n  \"frames\": [\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"_a71525f832f732f62d3a960635fd41d9\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/_a71525f832f732f62d3a960635fd41d9\"\n      },\n      \"byte_size\": 1920,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 3\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"_bcdb45608a4cbea994961c64173c4a36\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/_bcdb45608a4cbea994961c64173c4a36\"\n      },\n      \"byte_size\": 1920,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 3\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_15\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_15\"\n      },\n      \"byte_size\": 294188,\n      \"is_text\": false,\n      \"rows\": 1324,\n      \"columns\": 1025\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_18\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_18\"\n      },\n      \"byte_size\": 259424,\n      \"is_text\": false,\n      \"rows\": 1059,\n      \"columns\": 1025\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_24\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_24\"\n      },\n      \"byte_size\": 1316547,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 2057\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_27\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_27\"\n      },\n      \"byte_size\": 1921,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 3\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_33\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_33\"\n      },\n      \"byte_size\": 1330773,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 2079\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"frame_rdd_36\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/frame_rdd_36\"\n      },\n      \"byte_size\": 1922,\n      \"is_text\": false,\n      \"rows\": 1,\n      \"columns\": 3\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"train.hex\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/train.hex\"\n      },\n      \"byte_size\": 268962,\n      \"is_text\": false,\n      \"rows\": 1059,\n      \"columns\": 1025\n    },\n    {\n      \"__meta\": {\n        \"schema_version\": 3,\n        \"schema_name\": \"FrameSynopsisV3\",\n        \"schema_type\": \"Iced\"\n      },\n      \"frame_id\": {\n        \"__meta\": {\n          \"schema_version\": 3,\n          \"schema_name\": \"FrameKeyV3\",\n          \"schema_type\": \"Key<Frame>\"\n        },\n        \"name\": \"valid.hex\",\n        \"type\": \"Key<Frame>\",\n        \"URL\": \"\\/4\\/Frames\\/valid.hex\"\n      },\n      \"byte_size\": 105183,\n      \"is_text\": false,\n      \"rows\": 265,\n      \"columns\": 1025\n    }\n  ],\n  \"compatible_models\": null,\n  \"domain\": null\n}"},"dateCreated":"Jun 2, 2016 3:07:23 PM","dateStarted":"Jun 2, 2016 3:21:57 PM","dateFinished":"Jun 2, 2016 3:21:57 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:697","focus":true},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1464906009087_1798873948","id":"20160602-152009_1167529194","dateCreated":"Jun 2, 2016 3:20:09 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:698","dateUpdated":"Jun 2, 2016 3:22:18 PM"}],"name":"Ham Or Spam Pipeline","id":"2BKNA9TM4","angularObjects":{"2BQ5AZCBE":[],"2BMCWBTUK":[],"2BNYKTPCN":[],"2BMVVWT1H":[],"2BPHPJ5RE":[],"2BKKY6DC7":[],"2BMY8KK6J":[],"2BMXJ1DV6":[],"2BQ9MNSZU":[],"2BM19HVRV":[],"2BPQU396F":[],"2BP1H3YT2":[],"2BPP3B7QH":[],"2BNEWV4JJ":[]},"config":{"looknfeel":"default"},"info":{}}
